{"version":3,"sources":["login.js","mapbox.js","alert.js","updateSettings.js","index.js"],"names":["login","email","password","method","url","credentials","data","res","status","window","setTimeout","location","assign","response","message","logout","req","reload","displayMap","locations","mapboxgl","accessToken","map","Map","container","style","scrollZoom","bounds","LngLatBounds","forEach","loc","el","document","createElement","className","Marker","element","anchor","setLngLat","coordinates","addTo","Popup","offset","setHTML","day","description","extend","fitBounds","padding","top","bottom","left","right","hideAlert","querySelector","parentElement","removeChild","showAlert","type","msg","markup","insertAdjacentHTML","updateSettings","axios","credetinals","toUpperCase","mapBox","getElementById","loginForm","logoutBtn","updateUserForm","userPasswordForm","console","log","JSON","parse","dataset","addEventListener","e","preventDefault","value","name","submitBtn","textContent","passwordCurrent","passwordConfirm","reset"],"mappings":"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","file":"bundle.map","sourceRoot":"","sourcesContent":["import '@babel/polyfill';\r\nimport axios from 'axios';\r\nimport { showAlert } from './alert';\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: 'http://127.0.0.1:3000/api/v1/users/login',\r\n      credentials: 'include',\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n\r\n    if (res.data.status === 'success') {\r\n      showAlert('success', 'Logged in successfully');\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 1500);\r\n    }\r\n  } catch (err) {\r\n    showAlert('error', err.response.data.message);\r\n  }\r\n};\r\n\r\nexport const logout = async (req, res) => {\r\n  try {\r\n    const res = await axios({\r\n      method: 'get',\r\n      url: 'http://127.0.0.1:3000/api/v1/users/logout',\r\n    });\r\n\r\n    if (res.data.status === 'success') {\r\n      // passing true in the reload method for restarting the server!\r\n      location.reload(true);\r\n    }\r\n  } catch (err) {\r\n    showAlert('Error', 'Error logging out! Try again.');\r\n  }\r\n};\r\n","// window.addEventListener('DOMContentLoaded', function () {\r\n//   console.log('Dom is mounted buddy!');\r\n// Available when the dom is mounted!\r\n// const locations = document.getElementById('map').dataset.locations;\r\n// console.log(locations);\r\n// });\r\n\r\nexport const displayMap = (locations) => {\r\n  mapboxgl.accessToken =\r\n    'pk.eyJ1IjoicmV6YXVsMzYwIiwiYSI6ImNsanN4Z3BvMzAxOHQzZG1sM3MxNHo3YTIifQ.QCoT8pnpfX6kOyIEtcEUAQ';\r\n\r\n  var map = new mapboxgl.Map({\r\n    container: 'map',\r\n    style: 'mapbox://styles/rezaul360/cljsyzo3z01f501qy31y9du43',\r\n    scrollZoom: false,\r\n    //   center: [-118.113491, 34.111745],\r\n    //   zoom: 4,\r\n    //   interactive: false,\r\n  });\r\n\r\n  const bounds = new mapboxgl.LngLatBounds();\r\n\r\n  locations.forEach((loc) => {\r\n    //  Create marker\r\n    const el = document.createElement('div');\r\n    el.className = 'marker';\r\n\r\n    // Add marker\r\n    new mapboxgl.Marker({\r\n      element: el,\r\n      anchor: 'bottom',\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .addTo(map);\r\n\r\n    // Add popup\r\n    new mapboxgl.Popup({\r\n      offset: 30,\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\r\n      .addTo(map);\r\n\r\n    // Extends the map bounds to include the current locations\r\n    bounds.extend(loc.coordinates);\r\n  });\r\n\r\n  map.fitBounds(bounds, {\r\n    padding: {\r\n      top: 200,\r\n      bottom: 150,\r\n      left: 100,\r\n      right: 100,\r\n    },\r\n  });\r\n};\r\n","export const hideAlert = () => {\r\n  const el = document.querySelector('.alert');\r\n  if (el) {\r\n    el.parentElement.removeChild(el);\r\n  }\r\n};\r\nexport const showAlert = (type, msg) => {\r\n  hideAlert();\r\n  const markup = `<div class='alert alert--${type}'>${msg}</div>`;\r\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\r\n  window.setTimeout(hideAlert, 5000);\r\n};\r\n","// import axios from 'axios';\r\nimport { showAlert } from './alert';\r\n\r\n// type is either data or password\r\nexport const updateSettings = async (data, type) => {\r\n  const url =\r\n    type === 'data'\r\n      ? 'http://127.0.0.1:3000/api/v1/users/updateMe'\r\n      : 'http://127.0.0.1:3000/api/v1/users/updateMyPassword';\r\n  try {\r\n    const res = await axios({\r\n      method: 'patch',\r\n      url,\r\n      credetinals: 'include',\r\n      data,\r\n    });\r\n\r\n    if (res.data.status === 'success') {\r\n      showAlert('success', `Updated user ${type.toUpperCase()}!`);\r\n      // window.setTimeout(() => {\r\n      //   location.assign('/');\r\n      // }, 1500);\r\n    }\r\n  } catch (err) {\r\n    showAlert('error', err.response.data.message);\r\n  }\r\n};\r\n","import { login, logout } from './login';\r\nimport { displayMap } from './mapbox';\r\nimport { updateSettings } from './updateSettings';\r\n\r\n// DOM Elements\r\nconst mapBox = document.getElementById('map');\r\nconst loginForm = document.querySelector('.form--login');\r\nconst logoutBtn = document.querySelector('.nav__el--logout');\r\nconst updateUserForm = document.querySelector('.form-user-data');\r\nconst userPasswordForm = document.querySelector('.form-user-password');\r\n\r\nconsole.log(logoutBtn);\r\n// Delegatins\r\n\r\nif (mapBox) {\r\n  const locations = JSON.parse(mapBox.dataset.locations);\r\n  displayMap(locations);\r\n}\r\n\r\nif (loginForm) {\r\n  loginForm.addEventListener('submit', function (e) {\r\n    e.preventDefault();\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    login(email, password);\r\n  });\r\n}\r\n\r\nif (logoutBtn) {\r\n  console.log('ok');\r\n  logoutBtn.addEventListener('click', logout);\r\n}\r\n\r\nif (updateUserForm) {\r\n  updateUserForm.addEventListener('submit', async function (e) {\r\n    e.preventDefault();\r\n    const name = document.getElementById('name').value;\r\n    const email = document.getElementById('email').value;\r\n    await updateSettings({ name, email }, 'data');\r\n  });\r\n}\r\n\r\nif (userPasswordForm) {\r\n  const submitBtn = document.querySelector('.btn--save-password');\r\n  userPasswordForm.addEventListener('submit', async function (e) {\r\n    e.preventDefault();\r\n    submitBtn.textContent = 'Updating...';\r\n    const passwordCurrent = document.getElementById('password-current').value;\r\n    const password = document.getElementById('password').value;\r\n    const passwordConfirm = document.getElementById('password-confirm').value;\r\n    await updateSettings(\r\n      { passwordCurrent, password, passwordConfirm },\r\n      'password'\r\n    );\r\n    userPasswordForm.reset();\r\n    submitBtn.textContent = 'Save Password';\r\n  });\r\n}\r\n"]}